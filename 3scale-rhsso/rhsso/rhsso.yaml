apiVersion: v1
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      description: ConfigMap providing service ca bundle.
      openshift.io/generated-by: OpenShiftNewApp
      service.beta.openshift.io/inject-cabundle: "true"
    creationTimestamp: null
    labels:
      app: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/component: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/instance: sso74-ocp4-x509-postgresql-persistent
      application: sso
      rhsso: 7.4.3.GA
      template: sso74-ocp4-x509-postgresql-persistent
    name: sso-service-ca
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's https port.
      openshift.io/generated-by: OpenShiftNewApp
      service.alpha.openshift.io/dependencies: '[{"name": "sso-postgresql", "kind": "Service"}]'
      service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
    creationTimestamp: null
    labels:
      app: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/component: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/instance: sso74-ocp4-x509-postgresql-persistent
      application: sso
      rhsso: 7.4.3.GA
      template: sso74-ocp4-x509-postgresql-persistent
    name: sso
  spec:
    ports:
    - port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: sso
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The database server's port.
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/component: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/instance: sso74-ocp4-x509-postgresql-persistent
      application: sso
      rhsso: 7.4.3.GA
      template: sso74-ocp4-x509-postgresql-persistent
    name: sso-postgresql
  spec:
    ports:
    - port: 5432
      targetPort: 5432
    selector:
      deploymentConfig: sso-postgresql
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The JGroups ping port for clustering.
      openshift.io/generated-by: OpenShiftNewApp
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
    creationTimestamp: null
    labels:
      app: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/component: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/instance: sso74-ocp4-x509-postgresql-persistent
      application: sso
      rhsso: 7.4.3.GA
      template: sso74-ocp4-x509-postgresql-persistent
    name: sso-ping
  spec:
    clusterIP: None
    ports:
    - name: ping
      port: 8888
      targetPort: 0
    selector:
      deploymentConfig: sso
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      description: Route for application's https service.
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/component: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/instance: sso74-ocp4-x509-postgresql-persistent
      application: sso
      rhsso: 7.4.3.GA
      template: sso74-ocp4-x509-postgresql-persistent
    name: sso
  spec:
    tls:
      termination: reencrypt
    to:
      kind: ""
      name: sso
      weight: null
  status: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/component: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/instance: sso74-ocp4-x509-postgresql-persistent
      application: sso
      rhsso: 7.4.3.GA
      template: sso74-ocp4-x509-postgresql-persistent
    name: sso
  spec:
    replicas: 1
    selector:
      deploymentConfig: sso
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          application: sso
          deploymentConfig: sso
        name: sso
      spec:
        containers:
        - env:
          - name: SSO_HOSTNAME
          - name: DB_SERVICE_PREFIX_MAPPING
            value: sso-postgresql=DB
          - name: DB_JNDI
            value: java:jboss/datasources/KeycloakDS
          - name: DB_USERNAME
            value: userQWu
          - name: DB_PASSWORD
            value: 73dbHiNn4CeYXexyw4F4uRdLwX6YOvMP
          - name: DB_DATABASE
            value: root
          - name: TX_DATABASE_PREFIX_MAPPING
            value: sso-postgresql=DB
          - name: DB_MIN_POOL_SIZE
          - name: DB_MAX_POOL_SIZE
          - name: DB_TX_ISOLATION
          - name: JGROUPS_PING_PROTOCOL
            value: openshift.DNS_PING
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: sso-ping
          - name: OPENSHIFT_DNS_PING_SERVICE_PORT
            value: "8888"
          - name: X509_CA_BUNDLE
            value: /var/run/configmaps/service-ca/service-ca.crt /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - name: JGROUPS_CLUSTER_PASSWORD
            value: SbbKPxnqcEoFRINXktsJjH3oL5eDyIOE
          - name: SSO_ADMIN_USERNAME
            value: admin
          - name: SSO_ADMIN_PASSWORD
            value: admin@123
          - name: SSO_REALM
          - name: SSO_SERVICE_USERNAME
          - name: SSO_SERVICE_PASSWORD
          image: sso
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/livenessProbe.sh
            initialDelaySeconds: 60
            failureThreshold: 300
            periodSeconds: 300
            successThreshold: 1
            timeoutSeconds: 1
          name: sso
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/readinessProbe.sh
          resources:
            limits:
              memory: 1Gi
          volumeMounts:
          - mountPath: /etc/x509/https
            name: sso-x509-https-volume
            readOnly: true
          - mountPath: /etc/x509/jgroups
            name: sso-x509-jgroups-volume
            readOnly: true
          - mountPath: /var/run/configmaps/service-ca
            name: service-ca
            readOnly: true
        terminationGracePeriodSeconds: 75
        volumes:
        - name: sso-x509-https-volume
          secret:
            secretName: sso-x509-https-secret
        - name: sso-x509-jgroups-volume
          secret:
            secretName: sso-x509-jgroups-secret
        - configMap:
            name: sso-service-ca
          name: service-ca
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - sso
        from:
          kind: ImageStreamTag
          name: sso74-openshift-rhel8:7.4
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/component: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/instance: sso74-ocp4-x509-postgresql-persistent
      application: sso
      rhsso: 7.4.3.GA
      template: sso74-ocp4-x509-postgresql-persistent
    name: sso-postgresql
  spec:
    replicas: 1
    selector:
      deploymentConfig: sso-postgresql
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          application: sso
          deploymentConfig: sso-postgresql
        name: sso-postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: userQWu
          - name: POSTGRESQL_PASSWORD
            value: 73dbHiNn4CeYXexyw4F4uRdLwX6YOvMP
          - name: POSTGRESQL_DATABASE
            value: root
          - name: POSTGRESQL_MAX_CONNECTIONS
          - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
          - name: POSTGRESQL_SHARED_BUFFERS
          image: postgresql
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 90
            tcpSocket:
              port: 5432
            timeoutSeconds: 10
          name: sso-postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 90
            timeoutSeconds: 10
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: sso-postgresql-pvol
        terminationGracePeriodSeconds: 60
        volumes:
        - name: sso-postgresql-pvol
          persistentVolumeClaim:
            claimName: sso-postgresql-claim
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - sso-postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:10
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/component: sso74-ocp4-x509-postgresql-persistent
      app.kubernetes.io/instance: sso74-ocp4-x509-postgresql-persistent
      application: sso
      rhsso: 7.4.3.GA
      template: sso74-ocp4-x509-postgresql-persistent
    name: sso-postgresql-claim
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  status: {}
kind: List
metadata: {}
